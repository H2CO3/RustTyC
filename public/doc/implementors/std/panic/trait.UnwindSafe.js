(function() {var implementors = {};
implementors["rusttyc"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"rusttyc/struct.TcKey.html\" title=\"struct rusttyc::TcKey\">TcKey</a>","synthetic":true,"types":["rusttyc::keys::TcKey"]},{"text":"impl&lt;AbsTy, Var&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"rusttyc/struct.TypeChecker.html\" title=\"struct rusttyc::TypeChecker\">TypeChecker</a>&lt;AbsTy, Var&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AbsTy: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Var: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["rusttyc::type_checker::TypeChecker"]},{"text":"impl&lt;AbsTy&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"rusttyc/enum.TcErr.html\" title=\"enum rusttyc::TcErr\">TcErr</a>&lt;AbsTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AbsTy: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;AbsTy as <a class=\"trait\" href=\"rusttyc/types/trait.Abstract.html\" title=\"trait rusttyc::types::Abstract\">Abstract</a>&gt;::<a class=\"type\" href=\"rusttyc/types/trait.Abstract.html#associatedtype.Err\" title=\"type rusttyc::types::Abstract::Err\">Err</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["rusttyc::type_checker::TcErr"]},{"text":"impl&lt;AbsTy&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"rusttyc/types/struct.AbstractTypeTable.html\" title=\"struct rusttyc::types::AbstractTypeTable\">AbstractTypeTable</a>&lt;AbsTy&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AbsTy: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["rusttyc::types::AbstractTypeTable"]},{"text":"impl&lt;Concrete&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"rusttyc/types/struct.ReifiedTypeTable.html\" title=\"struct rusttyc::types::ReifiedTypeTable\">ReifiedTypeTable</a>&lt;Concrete&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Concrete: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["rusttyc::types::ReifiedTypeTable"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"rusttyc/types/enum.ReificationErr.html\" title=\"enum rusttyc::types::ReificationErr\">ReificationErr</a>","synthetic":true,"types":["rusttyc::types::ReificationErr"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()